AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  tic-tac-toe

  Sample SAM Template for tic-tac-toe

Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        DOCUMENT_CLIENT_ENDPOINT: ''

Resources:
  PlayerCreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: backends/players/src/create.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - arm64
      Events:
        PlayerCreate:
          Type: Api
          Properties:
            Path: /player
            Method: post
  PlayerValidateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: backends/players/src/validate.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - arm64
      Events:
        PlayerValidate:
          Type: Api
          Properties:
            Path: /player/validate
            Method: post
  PlayerGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: backends/players/src/get.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - arm64
      Events:
        PlayerGet:
          Type: Api
          Properties:
            Path: /player/{id}
            Method: get
  TicTacToeGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: backends/tic-tac-toe/src/get.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - arm64
      Events:
        TicTacToeGet:
          Type: Api
          Properties:
            Path: /tic-tac-toe/{id}
            Method: get
  TicTacToeJoinGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: backends/tic-tac-toe/src/join-game.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - arm64
      Events:
        TicTacToeJoinGame:
          Type: Api
          Properties:
            Path: /tic-tac-toe/join-game
            Method: post
  TicTacToeMakeMoveFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: backends/tic-tac-toe/src/make-move.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - arm64
      Events:
        TicTacToeMakeMove:
          Type: Api
          Properties:
            Path: /tic-tac-toe/make-move
            Method: post
  TicTacToeNewGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      Handler: backends/tic-tac-toe/src/new-game.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - arm64
      Events:
        TicTacToeNewGame:
          Type: Api
          Properties:
            Path: /tic-tac-toe/new-game
            Method: post
  GameStateDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      TableName: "gameState"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      Tags:
        -
          Key: "TableName"
          Value: "gameState"
      TableClass: "STANDARD"
  PlayerDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      TableName: "player"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      Tags:
        -
          Key: "TableName"
          Value: "player"
      TableClass: "STANDARD"

#Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#  HelloWorldApi:
#    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#  HelloWorldFunction:
#    Description: "Hello World Lambda Function ARN"
#    Value: !GetAtt HelloWorldFunction.Arn
#  HelloWorldFunctionIamRole:
#    Description: "Implicit IAM Role created for Hello World function"
#    Value: !GetAtt HelloWorldFunctionRole.Arn
